{"version":3,"sources":["components/Job.js","components/JobList.js","pages/Homepage.js","pages/AddJobPage.js","pages/EditJobPage.js","pages/Login.jsx","pages/Register.jsx","pages/LoginPage.js","App.js","reportWebVitals.js","index.js"],"names":["Job","job","onDelete","onEdit","title","companyName","jobType","location","locationType","dateApplied","status","skills","contacts","onClick","_id","JobList","jobs","id","map","i","HomePage","setJobToEdit","useState","setJobs","history","useHistory","fetch","method","response","newJobs","filter","m","console","error","loadJobs","a","json","data","useEffect","push","to","AddJobPage","setTitle","setCompany","setJobType","setLocation","setLocationType","setDate","setStatus","setSkill","setContact","addJob","newJob","body","JSON","stringify","headers","alert","type","value","placeholder","onChange","e","target","EditJobPage","jobToEdit","skill","contact","editJob","editedJob","Login","props","email","setEmail","pass","setPass","className","onSubmit","preventDefault","log","htmlFor","name","onFormSwitch","Register","setName","Log_in","currentForm","setCurrentForm","toggleForm","fornmName","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c26f0fb8.chunk.js","sourcesContent":["import React from 'react';\nimport { MdDeleteForever, MdEdit } from 'react-icons/md'\n\nfunction Job({ job, onDelete, onEdit }) {\n    return (\n        <tr>\n            <td>{job.title}</td>\n            <td>{job.companyName}</td>\n            <td>{job.jobType}</td>\n            <td>{job.location}</td>\n            <td>{job.locationType}</td>\n            <td>{job.dateApplied}</td>\n            <td>{job.status}</td>\n            <td>{job.skills}</td>\n            <td>{job.contacts}</td>\n            <td>< MdEdit onClick={() => onEdit(job)}/></td>\n            <td>< MdDeleteForever onClick={() => onDelete(job._id)}/></td>\n        </tr>\n    );\n}\n\nexport default Job;\n","import React from 'react';\nimport Job from './Job';\n\nfunction JobList({ jobs, onDelete, onEdit }) {\n    return (\n        <table id=\"jobs\">\n            <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Company</th>\n                    <th>Job Type</th>\n                    <th>Location</th>\n                    <th>Location Type</th>\n                    <th>Application Date (MM/DD/YY)</th>\n                    <th>Status</th>\n                    <th>Skills Required</th>\n                    <th>Related Contacts</th>\n                    <th>Edit</th>\n                    <th>Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {jobs.map((job, i) => <Job job={job}\n                    onDelete={onDelete}\n                    onEdit={onEdit}\n                    key={i} />)}\n            </tbody>\n        </table>\n    );\n}\n\nexport default JobList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport JobList from '../components/JobList';\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction HomePage({ setJobToEdit }) {\n    const [jobs, setJobs] = useState([]);\n    const history = useHistory();\n\n    const onDelete = async _id => {\n        const response = await fetch(`/jobs/${_id}`, { method: 'DELETE' });\n        if (response.status === 204) {\n            const newJobs = jobs.filter(m => m._id !== _id);\n            setJobs(newJobs);\n        } else {\n        console.error(`Failed to delete job with _id = ${_id}, status code = ${response.status}`)\n        }\n    };\n    \n    const onEdit = job => {\n        setJobToEdit(job);\n        history.push(\"/edit-job\");\n    }\n\n    const loadJobs = async () => {\n        const response = await fetch('/jobs');\n        const data = await response.json();\n        setJobs(data);\n    };\n        \n    useEffect(() => {\n        loadJobs();\n    }, []);\n\n    return (\n        <>\n            <h2>Job Tracker</h2>\n            <JobList jobs={jobs} onDelete={onDelete} onEdit={onEdit}></JobList>\n            <Link to=\"/add-job\">Add a job</Link>\n        </>\n    );\n}\n\nexport default HomePage;","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nexport const AddJobPage = () => {\n\n    const [title, setTitle] = useState('');\n    const [companyName, setCompany] = useState('');\n    const [jobType, setJobType] = useState('');\n    const [location, setLocation] = useState('');\n    const [locationType, setLocationType] = useState('');\n    const [dateApplied, setDate] = useState('');\n    const [status, setStatus] = useState('');\n    const [skills, setSkill] = useState('');\n    const [contacts, setContact] = useState('');\n\n    const history = useHistory();\n\n    const addJob = async () => {\n        const newJob = { title, companyName, jobType, location, locationType, dateApplied, status, skills, contacts };\n        const response = await fetch('/jobs', {\n            method: 'POST',\n            body: JSON.stringify(newJob),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n        if(response.status === 201){\n            alert(\"Successfully added the job\");\n        } else{\n            alert(`Failed to add job, status code = ${response.status}`);\n        }\n        history.push(\"/view-page\");\n    };\n\n    return (\n        <div>\n            <h1>Add Job</h1>\n            <input\n                type=\"text\"\n                value={title}\n                placeholder=\"Enter title here\"\n                onChange={e => setTitle(e.target.value)} />\n            <input\n                type=\"text\"\n                placeholder=\"Enter company here\"\n                value={companyName}\n                onChange={e => setCompany(e.target.value)} />\n            <input\n                type=\"text\"\n                placeholder=\"Enter job type here\"\n                value={jobType}\n                onChange={e => setJobType(e.target.value)} />\n            <input\n                type=\"text\"\n                placeholder=\"Enter location here\"\n                value={location}\n                onChange={e => setLocation(e.target.value)} />\n            <input\n                type=\"text\"\n                placeholder=\"Enter location type here\"\n                value={locationType}\n                onChange={e => setLocationType(e.target.value)} />            \n            <input\n                type=\"text\"\n                placeholder=\"Enter date here\"\n                value={dateApplied}\n                onChange={e => setDate(e.target.value)} />\n            <input\n                type=\"text\"\n                placeholder=\"Enter status here\"\n                value={status}\n                onChange={e => setStatus(e.target.value)} />\n            <input\n                type=\"text\"\n                placeholder=\"Enter skill here\"\n                value={skills}\n                onChange={e => setSkill(e.target.value)} />\n            <input\n                type=\"text\"\n                placeholder=\"Enter contact here\"\n                value={contacts}\n                onChange={e => setContact(e.target.value)} />\n            <button\n                onClick={addJob}\n            >Add</button>\n        </div>\n    );\n}\n\nexport default AddJobPage;\n","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nexport const EditJobPage = ({ jobToEdit }) => {\n\n    const [title, setTitle] = useState(jobToEdit.title);\n    const [companyName, setCompany] = useState(jobToEdit.companyName);\n    const [jobType, setJobType] = useState(jobToEdit.jobType);\n    const [location, setLocation] = useState(jobToEdit.location);\n    const [locationType, setLocationType] = useState(jobToEdit.locationType);\n    const [dateApplied, setDate] = useState(jobToEdit.dateApplied);\n    const [status, setStatus] = useState(jobToEdit.status);\n    const [skills, setSkill] = useState(jobToEdit.skill);\n    const [contacts, setContact] = useState(jobToEdit.contact);\n\n    const history = useHistory();\n\n    const editJob = async () => {\n        const editedJob = { title, companyName, jobType, location, locationType, dateApplied, status, skills, contacts };\n        const response = await fetch(`/jobs/${jobToEdit._id}`, {\n            method: 'PUT',\n            body: JSON.stringify(editedJob),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n        if(response.status === 200){\n            alert(\"Successfully edited the job\");\n        } else{\n            alert(`Failed to edit job, status code = ${response.status}`);\n        }\n        history.push(\"/view-page\");\n    };\n\n    return (\n        <div>\n            <h1>Edit Job</h1>\n            <input\n                type=\"text\"\n                value={title}\n                onChange={e => setTitle(e.target.value)} />\n            <input\n                type=\"text\"\n                value={companyName}\n                onChange={e => setCompany(e.target.value)} />\n            <input\n                type=\"text\"\n                value={jobType}\n                onChange={e => setJobType(e.target.value)} />\n            <input\n                type=\"text\"\n                value={location}\n                onChange={e => setLocation(e.target.value)} />\n            <input\n                type=\"text\"\n                value={locationType}\n                onChange={e => setLocationType(e.target.value)} />\n            <input\n                type=\"text\"\n                placeholder=\"Enter date here\"\n                value={dateApplied}\n                onChange={e => setDate(e.target.value)} />\n            <input\n                type=\"text\"\n                placeholder=\"Enter status here\"\n                value={status}\n                onChange={e => setStatus(e.target.value)} />\n            <input\n                type=\"text\"\n                placeholder=\"Enter skill here\"\n                value={skills}\n                onChange={e => setSkill(e.target.value)} />\n            <input\n                type=\"text\"\n                placeholder=\"Enter contact here\"\n                value={contacts}\n                onChange={e => setContact(e.target.value)} />\n            <button\n                onClick={editJob}\n            >Save</button>\n        </div>\n    );\n}\n\nexport default EditJobPage;\n","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nexport const Login = (props) => {\n    const [email, setEmail] = useState('');\n    const [pass, setPass] = useState('');\n    let history = useHistory();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(email);\n        console.log(pass);\n        if (email === 'jake@aol.com' && pass=== '1234'){\n            console.log('not empty');  \n            history.push(\"/view-page\")\n        } else {\n            alert('credentials not recognized');\n        }\n    }\n   \n\n    return (\n        <div className='auth-form-container'>\n            <h2>Login</h2>\n            <form className=\"login-form\" onSubmit={handleSubmit}>\n                <label htmlFor=\"email\">email</label>\n                <input value={email} onChange={(e) => setEmail(e.target.value)} id=\"email\" type=\"email\" placeholder=\"email@gmail.com\" name=\"email\"/>\n\n                <label htmlFor=\"password\">password</label>\n                <input value = {pass} onChange={(e) => setPass(e.target.value)}id=\"password\" type=\"password\" placeholder=\"**********\" name=\"password\"/>\n                \n                <button >Log In</button>\n            </form>\n            <button className='link-btn' onClick={() => props.onFormSwitch('register')}>No Account? Register Here</button>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nexport const Register = (props) => {\n    const [email, setEmail] = useState('');\n    const [pass, setPass] = useState('');\n    const [name, setName] = useState('');\n    let history = useHistory();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(email);\n        console.log(pass);\n        console.log(name);\n        \n    }\n\n    return (\n        <div className='auth-form-container'>\n            <h2>Register</h2>\n            <form className=\"register-form\" onSubmit={handleSubmit}>\n                <label htmlFor='name'>Full Name</label>\n                <input value={name} onChange={(e) => setName(e.target.value)}name=\"name\" id=\"name\" placeholder='Full Name'/>\n\n                <label htmlFor=\"email\">email</label>\n                <input value={email} onChange={(e) => setEmail(e.target.value)} id=\"email\" type=\"email\" placeholder=\"email@gmail.com\" name=\"email\"/>\n\n                <label htmlFor=\"password\">password</label>\n                <input value = {pass} onChange={(e) => setPass(e.target.value)}id=\"password\" type=\"password\" placeholder=\"**********\" name=\"password\"/>\n                \n                <button onClick={() => {\n                    alert(\"sorry not accepting new users at the moment\");\n                    props.onFormSwitch('login');}\n                    }>Log In</button>\n            </form>\n            <button className='link-btn' onClick={() => props.onFormSwitch('login')}>Got an Account? Login here</button>\n        </div>\n    )\n\n}","import '../App.css';\nimport {Login} from \"./Login\"\nimport { Register } from './Register';\nimport React, {useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Log_in() {\n  const [currentForm, setCurrentForm] = useState(\"login\");\n\n  const toggleForm = (fornmName) => {\n    setCurrentForm(fornmName);\n  }\n\n  return (\n    <div >\n      <header className='fixed-top' >\n        <h1 > JOB TRACKER</h1>\n      </header>\n      <div className=\"App\">\n      {\n        currentForm === \"login\" ? <Login onFormSwitch={toggleForm} /> \n        : <Register onFormSwitch={toggleForm}/>\n      }\n      </div>\n    </div>\n  );\n}\n\n\nexport default Log_in;\n","import './App.css';\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport HomePage from './pages/Homepage';\nimport AddJobPage from './pages/AddJobPage';\nimport EditJobPage from './pages/EditJobPage';\nimport { useState} from 'react';\nimport Log_in from './pages/LoginPage';\n\nfunction App() {\n  const [jobToEdit, setJobToEdit] = useState();\n\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className=\"App-header\">\n          <Route path=\"/\" exact>\n            <Log_in />\n          </Route>\n          <Route path=\"/view-page\">\n            <HomePage setJobToEdit={setJobToEdit} />\n          </Route>\n          <Route path=\"/add-job\">\n            <AddJobPage />\n          </Route>\n          <Route path=\"/edit-job\">\n            <EditJobPage jobToEdit={jobToEdit} />\n          </Route>\n          </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}